{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ThingsDB",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#support"
		},
		{
			"match": ";",
			"name": "punctuation.terminator.statement.thingsdb"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.node.thingsdb",
				"match": "\\b(true|false|nil)\\b",
				"captures": {
					"0": {
						"name": "keyword.control.node.thingsdb"
					}
				}
			}]
		},
		"strings": {
			"patterns": [{
				"captures": {
					"1": {
						"name": "punctuation.definition.string.begin.thingsdb"
					},
					"2": {
						"name": "punctuation.definition.string.end.thingsdb"
					}
				},
				"match": "(N)?(')[^']*(')",
				"name": "string.quoted.single.thingsdb"
			}, {
				"captures": {
					"1": {
						"name": "punctuation.definition.string.begin.thingsdb"
					},
					"2": {
						"name": "punctuation.definition.string.end.thingsdb"
					}
				},
				"match": "(\")[^\"#]*(\")",
				"name": "string.quoted.double.thingsdb"
			}]
		},
		"comments": {
			"patterns": [{
				"begin": "/\\*",
				"beginCaptures": {
					"0": {
						"name": "punctuation.definition.comment.begin.thingsdb"
					}
				},
				"end": "\\*/",
				"endCaptures": {
					"0": {
						"name": "punctuation.definition.comment.end.thingsdb"
					}
				},
				"name": "comment.block.thingsdb"
			},  {
				"name": "comment.line.double-slash.thingsdb",
				"begin": "//",
				"end": "$"
			}]
		},
		"numbers": {
			"name": "constant.numeric.thingsdb",
			"patterns": [
				{
					"include": "#number-float"
				},
				{
					"include": "#number-dec"
				},
				{
					"include": "#number-hex"
				},
				{
					"include": "#number-oct"
				},
				{
					"include": "#number-bin"
				},
				{
					"include": "#number-long"
				},
				{
					"name": "invalid.illegal.name.thingsdb",
					"match": "\\b[0-9]+\\w+"
				}
			]
		},
		"support": {
			"patterns": [
				{
					"name": "storage.type.function.collection.thingsdb",
					"match": "\\b(assert|base64_encode|base64_decode|bool|bytes|deep|del_type|err|float|has_type|if|int|isarray|isascii|isbool|isbytes|iserr|isfloat|isinf|isint|islist|isnan|isnil|israw|isset|isstr|isthing|istuple|isutf8|list|mod_type|new|new_type|now|raise|refs|return|set|set_type|str|thing|try|type|type_count|type_info|types_info|wse)\\s*(?=\\()"
				},
				{
					"name": "storage.type.function.node.thingsdb",
					"match": "\\b(backup_info|backups_info|counters|del_backup|has_backup|new_backup|node_info|nodes_info|reset_counters|set_log_level|shutdown)\\s*(?=\\()"
				},
				{
					"name": "storage.type.function.thingsdb.thingsdb",
					"match": "\\b(collection_info|collections_info|del_collection|del_expired|del_node|del_token|del_user|grant|has_collection|has_node|has_token|has_user|new_collection|new_node|new_token|new_user|rename_collection|rename_user|revoke|set_password|user_info|users_info)\\s*(?=\\()"
				},
				{
					"name": "storage.type.function.procedure.thingsdb",
					"match": "\\b(del_procedure|has_procedure|new_procedure|procedure_doc|procedure_info|procedures_info|run)\\s*(?=\\()"
				},
				{
					"name": "storage.type.function.chain.thingsdb",
					"match": "\\.\\s*(len|call|doc|code|msg|extend|filter|find|findindex|indexof|map|pop|push|remove|sort|splice|add|has|contains|endswith|lower|startswith|test|upper|del|get|id|keys|set|values|wrap|unwrap)\\s*(?=\\()"
				},
				{
					"name": "storage.type.function.error.thingsdb",
					"match": "\\.\\s*(assert_err|auth_err|bad_data_err|forbidden_err|lookup_err|max_quota_err|node_err|num_arguments_err|operation_err|overflow_err|syntax_err|type_err|value_err|zero_div_err)\\s*(?=\\()"
				},
				{
                    "name": "constant.numeric.privilege.thingsdb",
                    "match": "\\b(FULL|GRANT|MODIFY|READ|WATCH|RUN)\\b"
                },
				{
                    "name": "constant.numeric.loglevel.thingsdb",
                    "match": "\\b(DEBUG|INFO|WARNING|ERROR|CRITICAL)\\b"
                }
			]
		},
		"number-float": {
			"name": "constant.numeric.float.thingsdb",
			"match": "(?x)\n  (?<! \\w)(?:\n    (?:\n      \\.[0-9](?: _?[0-9] )*\n      |\n      [0-9](?: _?[0-9] )* \\. [0-9](?: _?[0-9] )*\n      |\n      [0-9](?: _?[0-9] )* \\.\n    ) (?: [eE][+-]?[0-9](?: _?[0-9] )* )?\n    |\n    [0-9](?: _?[0-9] )* (?: [eE][+-]?[0-9](?: _?[0-9] )* )\n  )([jJ])?\\b\n",
			"captures": {
				"1": {
					"name": "storage.type.imaginary.number.thingsdb"
				}
			}
		},
		"number-dec": {
			"name": "constant.numeric.dec.thingsdb",
			"match": "(?x)\n  (?<![\\w\\.])(?:\n      [1-9](?: _?[0-9] )*\n      |\n      0+\n      |\n      [0-9](?: _?[0-9] )* ([jJ])\n      |\n      0 ([0-9]+)(?![eE\\.])\n  )\\b\n",
			"captures": {
				"1": {
					"name": "storage.type.imaginary.number.thingsdb"
				},
				"2": {
					"name": "invalid.illegal.dec.thingsdb"
				},
				"3": {
					"name": "invalid.illegal.dec.thingsdb"
				}
			}
		},
		"number-hex": {
			"name": "constant.numeric.hex.thingsdb",
			"match": "(?x)\n  (?<![\\w\\.])\n    (0[xX]) (_?[0-9a-fA-F])+\n  \\b\n",
			"captures": {
				"1": {
					"name": "storage.type.number.thingsdb"
				}
			}
		},
		"number-oct": {
			"name": "constant.numeric.oct.thingsdb",
			"match": "(?x)\n  (?<![\\w\\.])\n    (0[oO]) (_?[0-7])+\n  \\b\n",
			"captures": {
				"1": {
					"name": "storage.type.number.thingsdb"
				}
			}
		},
		"number-bin": {
			"name": "constant.numeric.bin.thingsdb",
			"match": "(?x)\n  (?<![\\w\\.])\n    (0[bB]) (_?[01])+\n  \\b\n",
			"captures": {
				"1": {
					"name": "storage.type.number.thingsdb"
				}
			}
		}
	},
	"scopeName": "source.ti"
}